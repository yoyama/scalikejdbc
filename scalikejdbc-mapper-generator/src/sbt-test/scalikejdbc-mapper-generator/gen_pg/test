> createTestDatabase

> scalikejdbcGenEcho programmers_pg
-$ exists src/main/scala/app/models/ProgrammersPg.scala
-$ exists src/test/scala/app/models/ProgrammersPgSpec.scala

> scalikejdbcGenForce programmers_pg
$ exists src/main/scala/app/models/ProgrammersPg.scala
$ exists src/test/scala/app/models/ProgrammersPgSpec.scala

> + compile
> + test:compile
> + testOnly app.models.ProgrammersPgTest

> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(template ="interpolation")}
> scalikejdbcGenEcho programmers_pg
> scalikejdbcGenForce programmers_pg
> + test:compile
> + testOnly app.models.ProgrammersPgTest

> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(testTemplate ="specs2unit")}
> scalikejdbcGenEcho programmers_pg
> scalikejdbcGenForce programmers_pg
> + test:compile
> + testOnly app.models.ProgrammersPgTest
> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(template ="queryDsl")}
> scalikejdbcGenEcho programmers_pg
> scalikejdbcGenForce programmers_pg
> + test:compile
> + testOnly app.models.ProgrammersPgTest

> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(testTemplate ="specs2acceptance")}
> scalikejdbcGenEcho programmers_pg
> scalikejdbcGenForce programmers_pg
> + test:compile
> + testOnly app.models.ProgrammersPgTest
> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(template ="interpolation")}
> scalikejdbcGenEcho programmers_pg
> scalikejdbcGenForce programmers_pg
> + test:compile
> + testOnly app.models.ProgrammersPgTest


> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(autoConstruct = true)}
> scalikejdbcGenEcho programmers_pg
> scalikejdbcGenForce programmers_pg
> + test:compile
> + testOnly app.models.ProgrammersPgTest

> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(defaultAutoSession = false)}
> scalikejdbcGenEcho programmers_pg
> scalikejdbcGenForce programmers_pg
> + test:compile
> + testOnly app.models.ProgrammersPgTest

$ delete src/test/scala/ProgrammersPgTest.scala

> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(dateTimeClass = scalikejdbc.mapper.DateTimeClass.ZonedDateTime)}
> scalikejdbcGenEcho programmers_pg
> scalikejdbcGenForce programmers_pg
> + test:compile

> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(dateTimeClass = scalikejdbc.mapper.DateTimeClass.OffsetDateTime)}
> scalikejdbcGenEcho programmers_pg
> scalikejdbcGenForce programmers_pg
> + test:compile

> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(template ="invalid template name")}
-> scalikejdbcGenEcho programmers_pg
-> scalikejdbcGenForce programmers_pg

> generateCodeForIssue339
> compile
